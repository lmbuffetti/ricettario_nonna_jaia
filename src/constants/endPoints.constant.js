export default {
    address: {
        search: postcode => `/get_address?post_code=${postcode}`,
        getAddress: () => '/get_address',
    },
    advisers: {
        addClient: (adviserUUID, clientUUID) => `/advisers/${adviserUUID}/set_client/${clientUUID}`,
        addToParaplanner: (paraplannerUUID, adviserUUID) => `/paraplanners/${paraplannerUUID}/set_adviser/${adviserUUID}`,
        getClients: clientUUID => `/paraplanners/${clientUUID}/advisers`,
    },
    aml: {
        checkAML: profileUUID => `/aml/${profileUUID}/check`,
        casesAML: profileUUID => `/aml/${profileUUID}/cases`,
        newestAML: profileUUID => `/aml/${profileUUID}/newest_case`,
        resultsAML: caseUUID => `/aml/${caseUUID}/results`,
        documentsAML: caseUUID => `/aml/${caseUUID}/documents`,
    },
    plan: {
        create: () => '/plan',
        bind: (planUUID, userProfileUUID) => `/plan/${planUUID}/users/${userProfileUUID}`,
        get: planUUID => `/plan/${planUUID}`,
        patch: planUUID => `/plan/${planUUID}`,
        addAsset: planUUID => `/plan/${planUUID}/asset`,
        uploadDocumentPlan: assetUUID => `/plan/${assetUUID}/documents`,
        updateAsset: (planUUID, assetUUID) => `/plan/${planUUID}/asset/${assetUUID}`,
        addCashflowToPlan: (planUUID, assetUUID) => `/plan/${planUUID}/asset/${assetUUID}/cashflow`,
        addDebt: planUUID => `/plan/${planUUID}/debt`,
        updateDebt: (planUUID, assetUUID) => `/plan/${planUUID}/debt/${assetUUID}`,
        addCashflowToDebt: (planUUID, assetUUID) => `/plan/${planUUID}/debt/${assetUUID}/cashflow`,
        addJob: planUUID => `/plan/${planUUID}/employment`,
        updateJob: (planUUID, jobUUID) => `/plan/${planUUID}/employment/${jobUUID}`,
        addCashflowToJob: (planUUID, jobUUID) => `/plan/${planUUID}/employment/${jobUUID}/cashflow`,
        addCashflow: planUUID => `/plan/${planUUID}/cashflow`,
        updateCashflow: (planUUID, cashflowUUID) => `/plan/${planUUID}/cashflow/${cashflowUUID}`,
        addAddress: planUUID => `/plan/${planUUID}/address`,
        updateAddress: addressUUID => `/address/${addressUUID}`,
        removeAddress: (planUUID, addressUUID) => `/plan/${planUUID}/address/${addressUUID}`,
        addGiving: planUUID => `/plan/${planUUID}/giving`,
        updateGiving: (planUUID, givingUUID) => `/plan/${planUUID}/giving/${givingUUID}`,
        addCashflowToGiving: (planUUID, givingUUID) => `/plan/${planUUID}/giving/${givingUUID}/cashflow`,
        createUser: planUUID => `/plan/${planUUID}/users`,
        updateUser: (planUUID, userUUID) => `/plan/${planUUID}/users/${userUUID}`,
        softFacts: planUUID => `/plan/${planUUID}/soft_fact`,
        editSoftFacts: factsUUID => `/soft_fact/${factsUUID}`,
        submitPlan: planUUID => `/plan/${planUUID}/submit`,
    },
    options: {
        get: () => '/options',
    },
    permission: {
        getAll: () => '/permissions',
        create: () => '/permissions',
        addPermissionForUser: (permissionCode, userUUID) => `/permissions/${permissionCode}/users/${userUUID}`,
        removePermissionForUser: (permissionCode, userUUID) => `/permissions/${permissionCode}/users/${userUUID}`,
        addPermissionForRole: (permissionCode, role) => `/permissions/${permissionCode}/roles/${role}`,
        removePermissionForRole: (permissionCode, role) => `/permissions/${permissionCode}/roles/${role}`,
    },
    riskProfile: {
        getRiskProfile: profileUUID => `/risk/${profileUUID}/risk_profile`,
        scoreRiskProfile: profileUUID => `/risk/${profileUUID}/risk_profile/score`,
    },
    role: {
        getAll: () => '/roles',
        create: () => '/roles',
        getSelected: role => `/roles/${role}`,
        updateSelected: role => `/roles/${role}`,
        removeSelected: role => `/roles/${role}`,
        addRoleToUser: (role, userUUID) => `/roles/${role}/users/${userUUID}`,
        removeUserFromRole: (role, userUUID) => `/roles/${role}/users/${userUUID}`,
    },
    users: {
        addUser: role => `/users/roles/${role}`,
        getUserByRole: role => `/users/roles/${role}`,
        all: () => '/users',
        allByParams: (page, perPage) => `/users?page=${page}&per_page=${perPage}`,
        allByRole: role => `/users/${role}`,
        updateUserId: profileUUID => `/users/${profileUUID}`,
        createWithRole: role => `/users/${role}`,
        getByUUIDWithRole: (role, uuid) => `/users/${role}/${uuid}`,
        updateByUUIDWithRole: (role, uuid) => `/users/${role}/${uuid}`,
        getMe: () => '/users/me',
        getMePlan: () => '/users/me/active_plan',
        updateMe: () => '/users/me',
        setPassword: userUUID => `/users/${userUUID}/set_password`,
        updatePassword: () => '/users/change_password',
        getPermission: token => `/users/${token}/permissions`,
        getTemporaryToken: userUUID => `/users/${userUUID}/token`,
        setTemporaryToken: userUUID => `/users/${userUUID}/token`,
        tokenExpires: () => '/cron/token_expires',
        get: userUUID => `/users/${userUUID}`,
        acceptTerms: profileUUID => `/users/${profileUUID}/accept_terms`,
    },
    webapp: {
        saveData: () => '/presentation',
    },
    website: {
        saveForm: () => '/contact',
    },
};
